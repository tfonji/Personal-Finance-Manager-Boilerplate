/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.pfm.controller;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import com.pfm.dto.User;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "com.pfm.codegen.languages.SpringCodegen", date = "2018-05-16T23:53:06.850Z")

@Api(value = "user", description = "the user API")
public interface UserApi {

    @ApiOperation(value = "retrieve all users", nickname = "userAllGet", notes = "", response = User.class, responseContainer = "List", tags={ "user", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Ok. Successfully retrieved all users.", response = User.class, responseContainer = "List") })
    @RequestMapping(value = "/user/all",
        produces = { "application/json", "application/xml" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<User>> userAllGet();


    @ApiOperation(value = "retrieve a user", nickname = "userGet", notes = "", response = User.class, responseContainer = "List", tags={ "user", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK. User retrieved successfully", response = User.class, responseContainer = "List") })
    @RequestMapping(value = "/user",
        produces = { "application/json", "application/xml" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<User>> userGet(@ApiParam(value = "create a new transaction" ,required=true )  @Valid @RequestBody String body);


    @ApiOperation(value = "create new user", nickname = "userNewPost", notes = "", tags={ "user", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK. User created successfully") })
    @RequestMapping(value = "/user/new",
        produces = { "application/json", "application/xml" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> userNewPost(@ApiParam(value = "create a new transaction" ,required=true )  @Valid @RequestBody User body);

}
